

#define HIGHJD 1.e7
#define LOWJD 0.0


#include "geotiff/xtiffio.h"  /* for TIFF */
#include "geotiff/geotiffio.h" /* for GeoTIFF */

typedef struct {
	uint32 nx;
	uint32 ny;
	double x0;
	double y0;
	double dx;
	double dy;
	float **vx;
	float **vy;
	float **ex;
	float **ey;
	char *velFile;
	uint32 clipFlag;        /* Set true to clip outliers */
	double clipThresh;  /* Threshold used to clip outliers */
	uint32 initMapFlag; /* Set flag to initialize with refVel map */
	uint32 computeErrorsFlag;  /* Set this flag to use velocity map to evaluate range/azimuth errors and write estimate to the .dat files */
} referenceVelocity;


double julday3d(int mm, int id, int iyyy);
/*
  write a tiepoint file generated by mosaic3d.
*/
unsigned char writeTieFile( outputImageStructure *outputImage, xyDEM *dem,  char *outFile,double tieThresh, char *extraTieFile, char *tideFile, int autoSize);
/*
  Process input file for mosaicDEMs
*/
void  get3DInputFile(char *inputFile,char ***phaseFiles, char ***geodatFiles, char ***baselineFiles,  outputImageStructure *outputImage, float **nDays, float **weights, int *nFiles);
/*
  Make mosaic of insar and other dems.
*/
void make3DMosaic(inputImageStructure *ascImages,    inputImageStructure *descImages,      vhParams *ascParams, vhParams *descParams,
		  xyDEM *dem,  outputImageStructure *outputImage,float fl,                   int no3d);
unsigned char refVelInterp(double x, double y,  referenceVelocity *refVel,float *vxPt,float *vyPt, float *exPt,float *eyPt);


void  setup3D(int nFiles,char **phaseFiles, char **geodatFiles,  char **baselineFiles,char **offsetFiles,char **azParamsFiles,
	      char **rOffsetFiles,char **rParamsFiles, float *nDays, float *weights, int *crossFlags, inputImageStructure **ascImages, inputImageStructure **descImages,
	      vhParams **ascParams, vhParams **descParams,  int *nAsc, int *nDesc,  int offsetFlag, int rOffsetFlag, int threeDOffFlag, FILE *fpLog,
	      outputImageStructure *outputImage);

void getRParams( Offsets *offsets);
double computeSig2Base(double sinThetaD,double cosThetaD, double azimuth, inputImageStructure *inputImage,Offsets *offsets);
void speckleTrackMosaic(inputImageStructure *images,vhParams *params, 	outputImageStructure *outputImage,float fl, referenceVelocity *refVel, int statsFlag);
void make3DOffsets(inputImageStructure *allImages,  vhParams *aParams,  xyDEM *dem,  outputImageStructure *outputImage,float fl,float timeThresh);
/* in speckleTrackMosaic.c */
void  computeScaleLS(float **inImage,float **scale,  int32 azimuthSize,int32 rangeSize,float fl,   float weight,double minVal,int32 iMin,int32 iMax,int32 jMin,int32 jMax);

double interpXYDEM(double x, double y, xyDEM xydem);
void makeVhMosaic(inputImageStructure *images,vhParams *params,  outputImageStructure *outputImage,float fl);
