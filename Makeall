# bash Makeall will build the entire set of routines.
# This script is fabulouly inelegant and inefficient but it should compile everything in a few minutes.
# It will building everything from scratch forcing recompiles for everything (often multiple times).
# But in most cases it should work.
#
# In most cases it can be configured with these 3 variables.
#
# Top level directory above code for binaries
export ROOTDIR=~
echo ROOTDIR =  $ROOTDIR
#
# Location for compiled binaries. Modify or make sure this name is your path variable
export BINDIR=$ROOTDIR/bin/$MACHTYPE
echo BINDIR = $BINDIR
#
# Top level for GrIMP source code (should be the directory this script resides in)
export PROGDIR=`dirname $PWD`
echo PROGDIR = $PROGDIR
#
#
# Install fft
pushd ../fft
bash install
popd
#
# Run make 
#
pushd ..
# confirm fftw, geotiff, tifflibs on system before compiling
#pushd landsatSource64
#make --always-make all ROOTDIR=$ROOTDIR PROGDIR=$PROGDIR BINDIR=$BINDIR  OSTYPE=$OSTYPE MACHTYPE=$MACHTYPE
#popd
#
pushd mosaicSource
make  --always-make all ROOTDIR=$ROOTDIR PROGDIR=$PROGDIR BINDIR=$BINDIR  OSTYPE=$OSTYPE MACHTYPE=$MACHTYPE
popd
#
pushd speckleSource
make --always-make all ROOTDIR=$ROOTDIR PROGDIR=$PROGDIR BINDIR=$BINDIR OSTYPE=$OSTYPE MACHTYPE=$MACHTYPE
popd
#
pushd unwrapSource
make  --always-make all ROOTDIR=$ROOTDIR PROGDIR=$PROGDIR BINDIR=$BINDIR OSTYPE=$OSTYPE MACHTYPE=$MACHTYPE
popd
#
pushd utilsSource
make  --always-make all ROOTDIR=$ROOTDIR PROGDIR=$PROGDIR BINDIR=$BINDIR  OSTYPE=$OSTYPE MACHTYPE=$MACHTYPE
popd

